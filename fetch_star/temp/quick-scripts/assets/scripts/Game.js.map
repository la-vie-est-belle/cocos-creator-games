{"version":3,"sources":["Game.js"],"names":["cc","Class","extends","Component","properties","starPrefab","default","type","Prefab","animRootPrefab","maxStarDuration","minStarDuration","ground","Node","player","btnNode","gameOverNode","scoreDisplay","Label","scoreAudio","AudioClip","onLoad","groundY","y","height","currentStar","currentAnimRoot","timer","starDuration","enabled","starPool","NodePool","scorePool","onStartGame","score","string","toString","x","active","getComponent","startMoveAt","v2","spawnNewStar","newStar","size","get","instantiate","reuse","setPosition","getNewStarPosition","node","addChild","Math","random","randX","randY","jumpHeight","maxX","width","despawnStar","star","put","spawnAnimRoot","fx","despawnAnimRoot","update","dt","gameOver","gainScore","pos","Animation","play","audioEngine","playEffect","stopAllActions","destroy"],"mappings":"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","file":"Game.js","sourceRoot":"../../../../assets/scripts","sourcesContent":["cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // 这个属性引用了星星预制资源\n        starPrefab: {\n            default: null,\n            type: cc.Prefab\n        },\n        animRootPrefab: {\n            default: null,\n            type: cc.Prefab\n        },\n        // 星星产生后消失时间的随机范围\n        maxStarDuration: 0,\n        minStarDuration: 0,\n        // 地面节点，用于确定星星生成的高度\n        ground: {\n            default: null,\n            type: cc.Node\n        },\n        // player 节点，用于获取主角弹跳的高度，和控制主角行动开关\n        player: {\n            default: null,\n            type: cc.Node\n        },\n        btnNode: {\n            default: null,\n            type: cc.Node\n        }, \n        gameOverNode: {\n            default: null,  \n            type: cc.Node\n        },\n        // score label 的引用\n        scoreDisplay: {\n            default: null,\n            type: cc.Label\n        },\n        // 得分音效资源\n        scoreAudio: {\n            default: null,\n            type: cc.AudioClip\n        }\n    },\n\n    onLoad: function () {\n        // 获取地平面的 y 轴坐标\n        this.groundY = this.ground.y + this.ground.height/2;\n        \n        // store last star's x position\n        this.currentStar = null;\n        this.currentAnimRoot = null;\n\n        // 初始化计时器\n        this.timer = 0;\n        this.starDuration = 0;\n\n        // is showing menu or running game\n        this.enabled = false;\n\n        // initialize star and score pool\n        this.starPool = new cc.NodePool('Star');\n        this.scorePool = new cc.NodePool('ScoreAnim');\n    },\n\n    onStartGame: function () {\n        // 初始化计分\n        this.score = 0;\n        this.scoreDisplay.string = 'Score: ' + this.score.toString();\n        // set game state to running\n        this.enabled = true;\n        // set button and gameover text out of screen\n        this.btnNode.x = 3000;\n        // \"Game Over\" not visible\n        this.gameOverNode.active = false;\n        // reset player position and move speed\n        this.player.getComponent('Player').startMoveAt(cc.v2(0, this.groundY));\n        // spawn star\n        this.spawnNewStar();\n    },\n\n    spawnNewStar: function() {\n        var newStar = null;\n        // 使用给定的模板在场景中生成一个新节点\n        if (this.starPool.size() > 0) {\n            newStar = this.starPool.get(this); // this will be passed to Star's reuse method\n        } else {\n            newStar = cc.instantiate(this.starPrefab);\n            // pass Game instance to star\n            newStar.getComponent('Star').reuse(this);\n        }\n        // 为星星设置一个随机位置\n        newStar.setPosition(this.getNewStarPosition());\n        // 将新增的节点添加到 Canvas 节点下面\n        this.node.addChild(newStar);\n\n        // 重置计时器，根据消失时间范围随机取一个值\n        this.starDuration = this.minStarDuration + Math.random() * (this.maxStarDuration - this.minStarDuration);\n        this.timer = 0;\n\n        this.currentStar = newStar;\n    },\n\n    getNewStarPosition: function () {\n        var randX = 0;\n        // 根据地平面位置和主角跳跃高度，随机得到一个星星的 y 坐标\n        var randY = this.groundY + Math.random() * this.player.getComponent('Player').jumpHeight + 50;\n        // 根据屏幕宽度，随机得到一个星星 x 坐标\n        var maxX = this.node.width/2;\n        randX = (Math.random() - 0.5) * 2 * maxX;\n        // 返回星星坐标\n        return cc.v2(randX, randY);\n    },\n\n    despawnStar (star) {\n        this.starPool.put(star);\n        this.spawnNewStar();\n    },\n\n    spawnAnimRoot: function () {\n        var fx;\n        if (this.scorePool.size() > 0) {\n            fx = this.scorePool.get(this);\n        } else {\n            fx = cc.instantiate(this.animRootPrefab);\n            fx.getComponent('ScoreAnim').reuse(this);\n        }\n        return fx;\n    },\n\n    despawnAnimRoot () {\n        this.scorePool.put(this.currentAnimRoot);\n    },\n\n    update: function (dt) {\n        // 每帧更新计时器，超过限度还没有生成新的星星\n        // 就会调用游戏失败逻辑\n        if (this.timer > this.starDuration) {\n            this.gameOver();\n            this.enabled = false;   // disable gameOver logic to avoid load scene repeatedly\n            return;\n        }\n        this.timer += dt;\n    },\n\n    gainScore: function (pos) {\n        this.score += 1;\n        // 更新 scoreDisplay Label 的文字\n        this.scoreDisplay.string = 'Score: ' + this.score;\n        // 播放特效\n        this.currentAnimRoot = this.spawnAnimRoot();\n        this.node.addChild(this.currentAnimRoot);\n        this.currentAnimRoot.setPosition(pos);\n        this.currentAnimRoot.getComponent(cc.Animation).play('score_pop');\n        // 播放得分音效\n        cc.audioEngine.playEffect(this.scoreAudio, false);\n    },\n\n    gameOver: function () {\n        this.gameOverNode.active = true;\n        this.btnNode.x = 0;\n        this.player.getComponent('Player').enabled = false;\n        this.player.stopAllActions(); //停止 player 节点的跳跃动作\n        this.currentStar.destroy();\n    }\n});\n"]}